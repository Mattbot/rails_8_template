error_log  stderr warn;

upstream upstream {
  server unix:/tmp/sockets/puma.sock fail_timeout=0;
}

server {
  listen     443 default ssl;

  ssl_certificate         /etc/nginx/certs/rails.crt;
  ssl_certificate_key     /etc/nginx/certs/rails.key;

  ssl_protocols  SSLv2 SSLv3 TLSv1.2 TLSv1.3;
  ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
  ssl_prefer_server_ciphers   on;

  #    access_log /dev/stdout text;

  proxy_connect_timeout      120s;
  proxy_send_timeout         120s;
  proxy_read_timeout         120s;
  proxy_buffering            on;
  proxy_buffer_size          8k;
  proxy_buffers              24 8k;
  proxy_busy_buffers_size    8k;
  proxy_max_temp_file_size   2048m;
  proxy_temp_file_write_size 32k;

  #    proxy_cache            STATIC;
  proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;

  location / {
    # remove Origin header to get around authenticity token check for docker/local env
    proxy_set_header Origin "";
    proxy_pass http://upstream;
    proxy_set_header Host $http_host;
  }

  location /assets {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,If-Modified-Since,If-None-Match,Cache-Control,Content-Type';

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 1728000; # pre-flight info is valid for 20 days
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    # remove Origin header to get around authenticity token check for docker/local env
    proxy_set_header Origin "";
    proxy_pass http://upstream;
  }

  location /api/v1 {
    add_header 'Access-Control-Allow-Origin' $allow_origin always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Origin, X-Auth-Token,X-CSRF-Token,x-xsrf-token,Accept' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always ;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    if ($request_method = 'OPTIONS') { 
      return 204;
    }
    
    proxy_pass http://upstream;
  }
}


